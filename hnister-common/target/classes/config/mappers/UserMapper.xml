<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zynworld.hnister.common.mappers.UserMapper">
  <resultMap id="BaseResultMap" type="cn.zynworld.hnister.common.domain.User">
    <id column="username" jdbcType="VARCHAR" property="username" />
    <result column="zlass_id" jdbcType="INTEGER" property="zlassId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="specialty_id" jdbcType="INTEGER" property="specialtyId" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="grad" jdbcType="VARCHAR" property="grad" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    username, zlass_id, name, birth, gender, status, city, salt, password, create_time, 
    avatar, type, specialty_id, college_id, grad
  </sql>
  <select id="selectByExample" parameterType="cn.zynworld.hnister.common.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zynworld.hnister.common.domain.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zynworld.hnister.common.domain.User">
    <selectKey keyProperty="username" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (zlass_id, name, birth, 
      gender, status, city, 
      salt, password, create_time, 
      avatar, type, specialty_id, 
      college_id, grad)
    values (#{zlassId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{birth,jdbcType=DATE}, 
      #{gender,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, #{city,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{avatar,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, #{specialtyId,jdbcType=INTEGER}, 
      #{collegeId,jdbcType=INTEGER}, #{grad,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zynworld.hnister.common.domain.User">
    <selectKey keyProperty="username" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="zlassId != null">
        zlass_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="specialtyId != null">
        specialty_id,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="grad != null">
        grad,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="zlassId != null">
        #{zlassId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="specialtyId != null">
        #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="grad != null">
        #{grad,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zynworld.hnister.common.domain.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.zlassId != null">
        zlass_id = #{record.zlassId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.specialtyId != null">
        specialty_id = #{record.specialtyId,jdbcType=INTEGER},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.grad != null">
        grad = #{record.grad,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set username = #{record.username,jdbcType=VARCHAR},
      zlass_id = #{record.zlassId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=DATE},
      gender = #{record.gender,jdbcType=INTEGER},
      status = #{record.status,jdbcType=SMALLINT},
      city = #{record.city,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=SMALLINT},
      specialty_id = #{record.specialtyId,jdbcType=INTEGER},
      college_id = #{record.collegeId,jdbcType=INTEGER},
      grad = #{record.grad,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zynworld.hnister.common.domain.User">
    update t_user
    <set>
      <if test="zlassId != null">
        zlass_id = #{zlassId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="specialtyId != null">
        specialty_id = #{specialtyId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="grad != null">
        grad = #{grad,jdbcType=VARCHAR},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zynworld.hnister.common.domain.User">
    update t_user
    set zlass_id = #{zlassId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=DATE},
      gender = #{gender,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      city = #{city,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      avatar = #{avatar,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      specialty_id = #{specialtyId,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      grad = #{grad,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.zynworld.hnister.common.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>